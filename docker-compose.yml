services:
  postgres:
    image: postgres:14-alpine
    container_name: celestia-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: celestia
      POSTGRES_PASSWORD: celestia_dev_password
      POSTGRES_DB: celestia_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U celestia"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: celestia-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: redis-server --appendonly yes

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: celestia-backend
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      NODE_ENV: development
      PORT: 3000
      DATABASE_URL: postgresql://celestia:celestia_dev_password@postgres:5432/celestia_dev
      REDIS_URL: redis://redis:6379
      JWT_SECRET: dev_jwt_secret_change_in_production
      ENCRYPTION_KEY: 0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef
      ALLOWED_ORIGINS: http://localhost:8081,http://localhost:19006,http://localhost:19000
    ports:
      - "3001:3000"
    volumes:
      - ./backend/src:/app/src
      - backend_node_modules:/app/node_modules

volumes:
  postgres_data:
  redis_data:
  backend_node_modules:

networks:
  default:
    name: celestia-network
